{
  "address": "4wyusm2nxncvNyiVej5mZ1k1mVPhfG41oNvHx4BWiYMq",
  "metadata": {
    "name": "policy_engine",
    "version": "0.0.1",
    "spec": "0.1.0",
    "description": "The Policy Registry Program (PRP) enables the creation of policies that can be used to control the flow of funds in a programmatic way."
  },
  "instructions": [
    {
      "name": "attach_to_policy_engine",
      "docs": [
        "policies",
        "attach a policy"
      ],
      "discriminator": [
        99,
        59,
        117,
        21,
        146,
        11,
        54,
        173
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "policy_engine",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "identity_filter",
          "type": {
            "defined": {
              "name": "IdentityFilter"
            }
          }
        },
        {
          "name": "policy_type",
          "type": {
            "defined": {
              "name": "PolicyType"
            }
          }
        }
      ]
    },
    {
      "name": "change_counter_limits",
      "discriminator": [
        200,
        2,
        8,
        102,
        43,
        168,
        141,
        139
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "policy_engine",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "removed_counter_limits",
          "type": "bytes"
        },
        {
          "name": "added_counter_limits",
          "type": {
            "vec": {
              "defined": {
                "name": "CounterLimit"
              }
            }
          }
        }
      ]
    },
    {
      "name": "change_counters",
      "discriminator": [
        156,
        107,
        88,
        204,
        113,
        131,
        241,
        192
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "policy_engine",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "removed_counters",
          "type": "bytes"
        },
        {
          "name": "added_counters",
          "type": {
            "vec": {
              "defined": {
                "name": "Counter"
              }
            }
          }
        }
      ]
    },
    {
      "name": "change_issuance_policies",
      "discriminator": [
        186,
        201,
        163,
        157,
        32,
        250,
        166,
        37
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "policy_engine",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "issuance_policies",
          "type": {
            "defined": {
              "name": "IssuancePolicies"
            }
          }
        }
      ]
    },
    {
      "name": "change_mapping",
      "discriminator": [
        103,
        1,
        52,
        20,
        160,
        194,
        113,
        125
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "policy_engine",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "mapping_source",
          "type": "bytes"
        },
        {
          "name": "mapping_value",
          "type": "bytes"
        }
      ]
    },
    {
      "name": "create_policy_engine",
      "docs": [
        "create a policy registry"
      ],
      "discriminator": [
        85,
        105,
        207,
        153,
        73,
        125,
        225,
        54
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "asset_mint"
        },
        {
          "name": "policy_engine_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "asset_mint"
              }
            ]
          }
        },
        {
          "name": "extra_metas_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  120,
                  116,
                  114,
                  97,
                  45,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  109,
                  101,
                  116,
                  97,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "asset_mint"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "authority",
          "type": "pubkey"
        },
        {
          "name": "delegate",
          "type": {
            "option": "pubkey"
          }
        },
        {
          "name": "enforce_policy_issuance",
          "type": {
            "option": "bool"
          }
        }
      ]
    },
    {
      "name": "create_tracker_account",
      "docs": [
        "create tracker account"
      ],
      "discriminator": [
        40,
        16,
        40,
        191,
        109,
        177,
        83,
        190
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "identity_account"
        },
        {
          "name": "identity_registry",
          "relations": [
            "identity_account"
          ]
        },
        {
          "name": "asset_mint",
          "relations": [
            "identity_registry"
          ]
        },
        {
          "name": "tracker_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "asset_mint"
              },
              {
                "kind": "account",
                "path": "identity_account"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "event_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  95,
                  95,
                  101,
                  118,
                  101,
                  110,
                  116,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "detach_from_policy_engine",
      "docs": [
        "remove policy"
      ],
      "discriminator": [
        156,
        137,
        67,
        121,
        46,
        207,
        45,
        12
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "policy_engine",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "hash",
          "type": "string"
        }
      ]
    },
    {
      "name": "enforce_policy_issuance",
      "discriminator": [
        204,
        149,
        175,
        224,
        136,
        255,
        219,
        75
      ],
      "accounts": [
        {
          "name": "asset_controller",
          "signer": true
        },
        {
          "name": "asset_mint",
          "relations": [
            "policy_engine",
            "identity_registry"
          ]
        },
        {
          "name": "policy_engine",
          "writable": true
        },
        {
          "name": "destination_account"
        },
        {
          "name": "identity_registry",
          "relations": [
            "identity_account"
          ]
        },
        {
          "name": "identity_account",
          "relations": [
            "destination_tracker_account"
          ]
        },
        {
          "name": "destination_tracker_account",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "issuance_timestamp",
          "type": "i64"
        }
      ]
    },
    {
      "name": "enforce_policy_on_levels_change",
      "discriminator": [
        236,
        18,
        123,
        137,
        253,
        244,
        32,
        248
      ],
      "accounts": [
        {
          "name": "identity_account"
        },
        {
          "name": "identity_registry",
          "signer": true,
          "relations": [
            "identity_account"
          ]
        },
        {
          "name": "asset_mint",
          "relations": [
            "identity_registry",
            "policy_engine"
          ]
        },
        {
          "name": "tracker_account",
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "asset_mint"
              },
              {
                "kind": "account",
                "path": "identity_account"
              }
            ]
          }
        },
        {
          "name": "policy_engine",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "new_levels",
          "type": {
            "defined": {
              "name": "NewLevelsArgs"
            }
          }
        },
        {
          "name": "new_country",
          "type": "u8"
        },
        {
          "name": "enforce_limits",
          "type": "bool"
        }
      ]
    },
    {
      "name": "execute_transaction",
      "docs": [
        "execute transfer hook"
      ],
      "discriminator": [
        105,
        37,
        101,
        197,
        75,
        251,
        102,
        26
      ],
      "accounts": [
        {
          "name": "source_account"
        },
        {
          "name": "asset_mint"
        },
        {
          "name": "destination_account"
        },
        {
          "name": "owner_delegate"
        },
        {
          "name": "extra_metas_account",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  120,
                  116,
                  114,
                  97,
                  45,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  109,
                  101,
                  116,
                  97,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "asset_mint"
              }
            ]
          }
        },
        {
          "name": "policy_engine_account",
          "writable": true
        },
        {
          "name": "identity_registry",
          "address": "7Zis9Cg1pa3PMRCMfJBgzoQThoBA21QMrkmEnx6nZdQQ"
        },
        {
          "name": "identity_registry_account"
        },
        {
          "name": "source_wallet_identity"
        },
        {
          "name": "destination_wallet_identity"
        },
        {
          "name": "source_identity_account"
        },
        {
          "name": "destination_identity_account"
        },
        {
          "name": "source_tracker_account",
          "writable": true
        },
        {
          "name": "destination_tracker_account",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "IdentityAccount",
      "discriminator": [
        194,
        90,
        181,
        160,
        182,
        206,
        116,
        158
      ]
    },
    {
      "name": "IdentityRegistryAccount",
      "discriminator": [
        154,
        254,
        118,
        4,
        115,
        36,
        125,
        78
      ]
    },
    {
      "name": "PolicyEngineAccount",
      "discriminator": [
        124,
        85,
        205,
        80,
        2,
        18,
        26,
        45
      ]
    },
    {
      "name": "TrackerAccount",
      "discriminator": [
        83,
        95,
        166,
        148,
        57,
        30,
        90,
        210
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidPolicy",
      "msg": "Invalid policy passed"
    },
    {
      "code": 6001,
      "name": "TransactionAmountLimitExceeded",
      "msg": "Transaction amount limit exceeded"
    },
    {
      "code": 6002,
      "name": "TransactionAmountVelocityExceeded",
      "msg": "Transaction amount velocity exceeded"
    },
    {
      "code": 6003,
      "name": "TransactionCountVelocityExceeded",
      "msg": "Transaction count velocity exceeded"
    },
    {
      "code": 6004,
      "name": "IdentityLevelLimitExceeded",
      "msg": "Identity level limit exceeded"
    },
    {
      "code": 6005,
      "name": "PolicyEngineFull",
      "msg": "Policy registry is full, cannot add more policies"
    },
    {
      "code": 6006,
      "name": "PolicyNotFound",
      "msg": "Policy not found"
    },
    {
      "code": 6007,
      "name": "IdentityFilterFailed",
      "msg": "Identity filter failed"
    },
    {
      "code": 6008,
      "name": "UnauthorizedSigner",
      "msg": "Unauthorized signer"
    },
    {
      "code": 6009,
      "name": "PolicyAlreadyExists",
      "msg": "Policy already exists"
    },
    {
      "code": 6010,
      "name": "MaxBalanceExceeded",
      "msg": "Max balance exceeded"
    },
    {
      "code": 6011,
      "name": "MinBalanceExceeded",
      "msg": "Min balance exceeded"
    },
    {
      "code": 6012,
      "name": "InvalidCpiTransferAmount",
      "msg": "Invalid CPI transfer amount"
    },
    {
      "code": 6013,
      "name": "InvalidCpiTransferMint",
      "msg": "Invalid CPI transfer mint"
    },
    {
      "code": 6014,
      "name": "InvalidCpiTransferProgram",
      "msg": "Invalid CPI transfer program"
    },
    {
      "code": 6015,
      "name": "InvalidPdaPassedIn",
      "msg": "Invalid PDA passed in"
    },
    {
      "code": 6016,
      "name": "TransferHistoryFull",
      "msg": "Transfer history full"
    },
    {
      "code": 6017,
      "name": "TransferPaused",
      "msg": "All Transfers have been paused"
    },
    {
      "code": 6018,
      "name": "ForceFullTransfer",
      "msg": "Expected source account to transfer full amount"
    },
    {
      "code": 6019,
      "name": "HolderLimitExceeded",
      "msg": "Holder limit exceeded"
    },
    {
      "code": 6020,
      "name": "BalanceLimitExceeded",
      "msg": "Balance limit exceeded"
    },
    {
      "code": 6021,
      "name": "TrackerAccountOwnerMismatch",
      "msg": "Tracker account owner mismatch"
    },
    {
      "code": 6022,
      "name": "ForbiddenIdentityGroup",
      "msg": "Forbidden identity group"
    },
    {
      "code": 6023,
      "name": "InvalidIdentityAccount",
      "msg": "Invalid identity account"
    },
    {
      "code": 6024,
      "name": "HoldersLimitExceeded",
      "msg": "Holders limit exceeded"
    },
    {
      "code": 6025,
      "name": "MinMaxBalanceExceeded",
      "msg": "Min max balance exceeded"
    },
    {
      "code": 6026,
      "name": "InvalidPolicyEngineAccount",
      "msg": "Invalid policy engine account"
    },
    {
      "code": 6027,
      "name": "PercentageLimitExceeded",
      "msg": "Percentage limit exceeded"
    },
    {
      "code": 6028,
      "name": "Flowback",
      "msg": "Flowback"
    },
    {
      "code": 6029,
      "name": "InvalidInstructionData",
      "msg": "Invalid instruction data"
    },
    {
      "code": 6030,
      "name": "BackdatingNotAllowed",
      "msg": "Backdating not allowed"
    },
    {
      "code": 6031,
      "name": "MaxSupplyExceeded",
      "msg": "Max supply exceeded"
    }
  ],
  "types": [
    {
      "name": "Counter",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "value",
            "type": "u64"
          },
          {
            "name": "id",
            "type": "u8"
          },
          {
            "name": "identity_filter",
            "type": {
              "defined": {
                "name": "IdentityFilter"
              }
            }
          }
        ]
      }
    },
    {
      "name": "CounterLimit",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "HoldersLimit",
            "fields": [
              {
                "name": "max",
                "type": "u64"
              },
              {
                "name": "min",
                "type": "u64"
              },
              {
                "name": "counter_id",
                "type": "u8"
              }
            ]
          },
          {
            "name": "GroupedHoldersLimit",
            "fields": [
              {
                "name": "max",
                "type": "u64"
              },
              {
                "name": "min",
                "type": "u64"
              },
              {
                "name": "counters",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "PercentageLimit",
            "fields": [
              {
                "name": "higher_counter_id",
                "type": "u8"
              },
              {
                "name": "lower_counter_id",
                "type": "u8"
              },
              {
                "name": "min_percentage",
                "type": "u8"
              },
              {
                "name": "max_percentage",
                "type": "u8"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "FilterComparison",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Or"
          },
          {
            "name": "And"
          }
        ]
      }
    },
    {
      "name": "FilterData",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "level",
            "type": {
              "defined": {
                "name": "FilterLevel"
              }
            }
          },
          {
            "name": "target",
            "type": {
              "defined": {
                "name": "FilterTarget"
              }
            }
          },
          {
            "name": "mode",
            "type": {
              "defined": {
                "name": "FilterMode"
              }
            }
          }
        ]
      }
    },
    {
      "name": "FilterInner",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Single",
            "fields": [
              {
                "defined": {
                  "name": "FilterData"
                }
              }
            ]
          },
          {
            "name": "Tuple",
            "fields": [
              {
                "defined": {
                  "name": "FilterData"
                }
              },
              {
                "defined": {
                  "name": "FilterComparison"
                }
              },
              {
                "defined": {
                  "name": "FilterData"
                }
              }
            ]
          },
          {
            "name": "Multiple",
            "fields": [
              {
                "defined": {
                  "name": "FilterComparison"
                }
              },
              {
                "vec": {
                  "defined": {
                    "name": "FilterData"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "FilterLevel",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Level",
            "fields": [
              "u8"
            ]
          },
          {
            "name": "LevelMappingAny",
            "fields": [
              "u8"
            ]
          },
          {
            "name": "LevelMapping",
            "fields": [
              {
                "name": "source",
                "type": "u8"
              },
              {
                "name": "target",
                "type": "u8"
              }
            ]
          },
          {
            "name": "Country",
            "fields": [
              "u8"
            ]
          },
          {
            "name": "CountryMapping",
            "fields": [
              "u8"
            ]
          }
        ]
      }
    },
    {
      "name": "FilterMode",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Include"
          },
          {
            "name": "Exclude"
          }
        ]
      }
    },
    {
      "name": "FilterTarget",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Sender"
          },
          {
            "name": "Receiver"
          },
          {
            "name": "BothAnd"
          },
          {
            "name": "BothOr"
          }
        ]
      }
    },
    {
      "name": "IdentityAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "docs": [
              "version of the account"
            ],
            "type": "u8"
          },
          {
            "name": "identity_registry",
            "docs": [
              "identity registry to which the account belongs"
            ],
            "type": "pubkey"
          },
          {
            "name": "owner",
            "docs": [
              "owner of the identity account"
            ],
            "type": "pubkey"
          },
          {
            "name": "num_wallets",
            "type": "u16"
          },
          {
            "name": "country",
            "type": "u8"
          },
          {
            "name": "levels",
            "type": {
              "vec": {
                "defined": {
                  "name": "IdentityLevel"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "IdentityFilter",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Simple",
            "fields": [
              {
                "defined": {
                  "name": "FilterInner"
                }
              }
            ]
          },
          {
            "name": "IfThen",
            "fields": [
              {
                "defined": {
                  "name": "FilterInner"
                }
              },
              {
                "defined": {
                  "name": "FilterInner"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "IdentityLevel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "level",
            "type": "u8"
          },
          {
            "name": "expiry",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "IdentityRegistryAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "asset_mint",
            "docs": [
              "corresponding asset mint"
            ],
            "type": "pubkey"
          },
          {
            "name": "authority",
            "docs": [
              "authority to manage the registry"
            ],
            "type": "pubkey"
          },
          {
            "name": "delegate",
            "docs": [
              "registry delegate"
            ],
            "type": "pubkey"
          },
          {
            "name": "allow_multiple_wallets",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "IssuancePolicies",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "disallow_backdating",
            "type": "bool"
          },
          {
            "name": "max_supply",
            "type": "u64"
          },
          {
            "name": "us_lock_period",
            "type": "u64"
          },
          {
            "name": "non_us_lock_period",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "LevelExpiry",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "level",
            "type": "u8"
          },
          {
            "name": "expiry",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "NewLevelsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "levels",
            "type": {
              "vec": {
                "defined": {
                  "name": "LevelExpiry"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "Policy",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "hash",
            "type": "string"
          },
          {
            "name": "identity_filter",
            "type": {
              "defined": {
                "name": "IdentityFilter"
              }
            }
          },
          {
            "name": "policy_type",
            "type": {
              "defined": {
                "name": "PolicyType"
              }
            }
          }
        ]
      }
    },
    {
      "name": "PolicyEngineAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "docs": [
              "version"
            ],
            "type": "u8"
          },
          {
            "name": "asset_mint",
            "docs": [
              "asset mint"
            ],
            "type": "pubkey"
          },
          {
            "name": "authority",
            "docs": [
              "authority of the registry"
            ],
            "type": "pubkey"
          },
          {
            "name": "delegate",
            "docs": [
              "policy delegate"
            ],
            "type": "pubkey"
          },
          {
            "name": "max_timeframe",
            "docs": [
              "max timeframe of all the policies"
            ],
            "type": "i64"
          },
          {
            "name": "enforce_policy_issuance",
            "docs": [
              "enforce policy issuance"
            ],
            "type": "bool"
          },
          {
            "name": "mapping",
            "docs": [
              "generic mapping for levels"
            ],
            "type": {
              "array": [
                "u8",
                256
              ]
            }
          },
          {
            "name": "issuance_policies",
            "docs": [
              "policies to apply on issuance",
              "these are partially for storage only"
            ],
            "type": {
              "defined": {
                "name": "IssuancePolicies"
              }
            }
          },
          {
            "name": "policies",
            "docs": [
              "policies to check on transfers or balance changes"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "Policy"
                }
              }
            }
          },
          {
            "name": "counters",
            "docs": [
              "counters to track the number of holders depending on filters"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "Counter"
                }
              }
            }
          },
          {
            "name": "counter_limits",
            "docs": [
              "limits to apply on existing counters"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "CounterLimit"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "PolicyType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "IdentityApproval"
          },
          {
            "name": "TransactionAmountLimit",
            "fields": [
              {
                "name": "limit",
                "type": "u64"
              }
            ]
          },
          {
            "name": "TransactionAmountVelocity",
            "fields": [
              {
                "name": "limit",
                "type": "u64"
              },
              {
                "name": "timeframe",
                "type": "i64"
              }
            ]
          },
          {
            "name": "TransactionCountVelocity",
            "fields": [
              {
                "name": "limit",
                "type": "u64"
              },
              {
                "name": "timeframe",
                "type": "i64"
              }
            ]
          },
          {
            "name": "MaxBalance",
            "fields": [
              {
                "name": "limit",
                "type": "u64"
              }
            ]
          },
          {
            "name": "MinBalance",
            "fields": [
              {
                "name": "limit",
                "type": "u64"
              }
            ]
          },
          {
            "name": "MinMaxBalance",
            "fields": [
              {
                "name": "min",
                "type": "u64"
              },
              {
                "name": "max",
                "type": "u64"
              }
            ]
          },
          {
            "name": "TransferPause"
          },
          {
            "name": "ForbiddenIdentityGroup"
          },
          {
            "name": "ForceFullTransfer"
          },
          {
            "name": "BlockFlowbackEndTime",
            "fields": [
              {
                "name": "time",
                "type": "i64"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Side",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Buy"
          },
          {
            "name": "Sell"
          }
        ]
      }
    },
    {
      "name": "TrackerAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "asset_mint",
            "type": "pubkey"
          },
          {
            "name": "identity_account",
            "type": "pubkey"
          },
          {
            "name": "transfers",
            "type": {
              "vec": {
                "defined": {
                  "name": "Transfer"
                }
              }
            }
          },
          {
            "name": "total_amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Transfer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          },
          {
            "name": "side",
            "type": {
              "defined": {
                "name": "Side"
              }
            }
          }
        ]
      }
    }
  ]
}